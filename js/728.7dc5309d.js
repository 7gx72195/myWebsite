"use strict";(self["webpackChunkmyweb"]=self["webpackChunkmyweb"]||[]).push([[728],{728:function(a,e,d){d.r(e),d.d(e,{default:function(){return k}});var t=d(252),v=d(963),n=d(577);const i={class:"home all"},s={class:"vue-menu"},o={class:"menu-items"},c=["onClick"],l={class:"menu-text"},r=(0,t.uE)('<div class="vue-content" data-v-142eb165><div class="jsView" data-v-142eb165><div data-v-142eb165><div class="containHeader" data-v-142eb165> 其他 </div></div><div class="divClass" id="aaa" data-v-142eb165><div class="divL" data-v-142eb165><div class="divTitle" data-v-142eb165><h2 data-v-142eb165> 取得現在日期 </h2></div><div class="divContent" data-v-142eb165><code data-v-142eb165><pre data-v-142eb165>var now=new Date().toLocaleString()\n          </pre></code></div></div><div class="divR" data-v-142eb165><div class="divTitle" data-v-142eb165><h2 data-v-142eb165> 是否為本基測試 </h2></div><div class="divContent" data-v-142eb165><code data-v-142eb165><pre data-v-142eb165>if (location.hostname == &quot;localhost&quot;) {\n     \n} else {\n       \n}\n</pre></code></div></div></div><div class="divClass" id="fff" data-v-142eb165><div class="divL" data-v-142eb165><div class="divTitle" data-v-142eb165><h2 data-v-142eb165> 檢查是否為空物件 </h2></div><div class="divContent" data-v-142eb165><code data-v-142eb165><pre data-v-142eb165>function isEmpty(obj) {\nfor(var key in obj) {\nif(obj.hasOwnProperty(key))\nreturn false;\n}\nreturn true;\n}\n</pre></code></div></div><div class="divR" data-v-142eb165><div class="divTitle" data-v-142eb165><h2 data-v-142eb165> async 與 await </h2></div><div class="divContent" data-v-142eb165><code data-v-142eb165><pre data-v-142eb165>function asyncFunc1(url) {\n  return new Promise((resolve, reject) =&gt; {\n    resolve(someValue);         // 完成\n    reject(&quot;failure reason&quot;);   // 拒絕\n  });\n};\n\nfunction asyncFunc2(url) {\n  return new Promise((resolve, reject) =&gt; {\n  // resolve() or reject()\n  });\n};\n\nconst asyncCall = async () =&gt; {\nconst result1 = await asyncFunc1();\nconst result2 = await asyncFunc2();\n};\n</pre></code></div></div></div><div data-v-142eb165><div class="containHeader" data-v-142eb165> 字串 </div></div><div class="divClass" id="bbb" data-v-142eb165><div class="divL" data-v-142eb165><div class="divTitle" data-v-142eb165><h2 data-v-142eb165> 字串去頭去尾 </h2></div><div class="divContent" data-v-142eb165><code data-v-142eb165><pre data-v-142eb165>\nstr.slice(start,end)\n&quot;123456789&quot;.slice(0,3)   ====&gt;   &#39;123&#39;\n&quot;123456789&quot;.slice(1,4)   ====&gt;   &#39;234&#39;\n&quot;123456789&quot;.slice(0,-1)   ====&gt;   &#39;12345678&#39;  去尾\n&quot;123456789&quot;.slice(1,-1)   ====&gt;   &#39;2345678&#39;   去頭去尾\n</pre></code></div></div><div class="divR" data-v-142eb165><div class="divTitle" data-v-142eb165><h2 data-v-142eb165> 刪除字串中的 &quot;.&quot; </h2></div><div class="divContent" data-v-142eb165><code data-v-142eb165><pre data-v-142eb165>var x = &quot;我.我.我.我.我.我.我&quot;;\nx.replace(/[.]/g,&quot;&quot;);\n\n=&gt;我我我我我我我\n          </pre></code></div></div></div><div class="divClass" id="ccc" data-v-142eb165><div class="divL" data-v-142eb165><div class="divTitle" data-v-142eb165><h2 data-v-142eb165> 去除字符串空格(空白符) </h2></div><div class="divContent" data-v-142eb165><code data-v-142eb165><pre data-v-142eb165>去除字符串內所有的空格：str = str.replace(/\\s*/g,&quot;&quot;);\n\n去除字符串內兩頭的空格：str = str.replace(/^\\s*|\\s*$/g,&quot;&quot;);\n\n去除字符串內左側的空格：str = str.replace(/^\\s*/,&quot;&quot;);\n\n去除字符串內右側的空格：str = str.replace(/(\\s*$)/g,&quot;&quot;);\n</pre></code></div></div><div class="divR" data-v-142eb165><div class="divTitle" data-v-142eb165><h2 data-v-142eb165> 字串是否包含某字串 </h2></div><div class="divContent" data-v-142eb165><code data-v-142eb165><li data-v-142eb165>indexOf() 方法可返回某個指定的字串值在字串中首次出現的位置。如果要檢索的字串值沒有出現，則該方法返回 -1。 </li> var str = &quot;123&quot;; console.log(str.indexOf(&quot;3&quot;) != -1 ); // true <li data-v-142eb165>search() 方法用於檢索字串中指定的子字串，或檢索與正則表示式相匹配的子字串。如果沒有找到任何匹配的子串，則返回 -1。。 </li> var str = &quot;123&quot;; console.log(str.search(&quot;3&quot;) != -1 ); // true </code></div></div></div><div data-v-142eb165><div class="containHeader" data-v-142eb165> 陣列 </div></div><div class="divClass" id="ddd" data-v-142eb165><div class="divL" data-v-142eb165><div class="divTitle" data-v-142eb165><h2 data-v-142eb165> 取集合 </h2></div><div class="divContent" data-v-142eb165><code data-v-142eb165><pre data-v-142eb165>var setA = [1,1,2,3,3];\nvar setB = [...new Set(setA)];\n\n==&gt; setB = [1,2,3];\n</pre></code></div></div><div class="divR" data-v-142eb165><div class="divTitle" data-v-142eb165><h2 data-v-142eb165> 陣列打平 </h2></div><div class="divContent" data-v-142eb165><code data-v-142eb165><pre data-v-142eb165>var myArray = [[1, 2],[3, 4, 5], [6, 7, 8, 9]];\n[].concat(...myArray);\n\n=&gt;[1, 2, 3, 4, 5, 6, 7, 8, 9]\n  </pre></code></div></div></div><div class="divClass" id="eee" data-v-142eb165><div class="divL" data-v-142eb165><div class="divTitle" data-v-142eb165><h2 data-v-142eb165> 陣列排序 </h2></div><div class="divContent" data-v-142eb165><code data-v-142eb165><pre data-v-142eb165>c = [3, -1, -2]\nc.sort()                             ====&gt;  [-1,-2,3]\nc.sort(function(a,b){return a-b})    ====&gt;  [-2,-1,3]   可排負數        \n</pre></code></div></div><div class="divR" data-v-142eb165><div class="divTitle" data-v-142eb165><h2 data-v-142eb165> 回傳符合條件的元素，得到一個新陣列。 </h2></div><div class="divContent" data-v-142eb165><code data-v-142eb165><pre data-v-142eb165>var arr = [1,2,3,4,5];\narr.filter(function(value) {\nreturn value &gt; 3;\n});\n\n=&gt;[4,5]\n    \n</pre></code></div></div></div><div class="divClass" id="eee" data-v-142eb165><div class="divL" data-v-142eb165><div class="divTitle" data-v-142eb165><h2 data-v-142eb165> Map </h2></div><div class="divContent" data-v-142eb165><code data-v-142eb165><pre data-v-142eb165>1. let myMap = new Map();\n\n2. let myMap = new Map([\n      [1, &#39;one&#39;],\n      [2, &#39;two&#39;],\n    ]);\n\n3. var numbers = [1, 4, 9];\n   var roots = numbers.map(Math.sqrt); //map會return一個新的array roots==&gt;[1, 2, 3]\n\n4. object to map :\n   let obj = {\n     name: &quot;John&quot;,\n     age: 30\n   };\n   let map = new Map(Object.entries(obj));\n\n</pre></code></div></div><div class="divR" data-v-142eb165><div class="divTitle" data-v-142eb165><h2 data-v-142eb165> Map (hash table) </h2></div><div class="divContent" data-v-142eb165><code data-v-142eb165><pre data-v-142eb165>基本用法\n  new Map() —— 創建 map。\n  map.set(key, value) —— 輸入 key-value 儲存值。\n  map.get(key) —— 根據key来返回值，如果 map 中不存在對應的 key，則返回 undefined。\n  map.has(key) —— 如果 key 存在則返回 true，否則返回 false。\n  map.delete(key) —— 刪除指定key的值。\n  map.clear() —— 清空 map。\n  map.size —— 返回當前元素個數。\n\nMap 迭代\n  let recipeMap = new Map([\n    [&#39;cucumber&#39;, 500],\n    [&#39;tomatoes&#39;, 350],\n    [&#39;onion&#39;,    50]\n  ]);\n\n  1. map.keys()        \n    for (let vegetable of recipeMap.keys()) {\n      console.log(vegetable); // cucumber, tomatoes, onion\n    }\n  2. map.values()\n    for (let amount of recipeMap.values()) {\n      console.log(amount); // 500, 350, 50\n    }\n  3. map.entries()\n    for (let entry of recipeMap) { \n      console.log(entry); // cucumber,500\n    }\n  4. 歷遍 Map\n    for (var [key, value] of recipeMap) {\n      console.log(key + &#39; = &#39; + value);\n    }\n  5. Map合併\n    var merged = new Map([...firstMap, ...secondMap]);\n\n</pre></code></div></div></div></div></div>',1);function b(a,e,d,b,u,p){return(0,t.wg)(),(0,t.iD)("div",i,[(0,t._)("div",s,[(0,t.Wm)(v.uT,{name:"fade"},{default:(0,t.w5)((()=>[(0,t.wy)((0,t._)("div",o,[((0,t.wg)(!0),(0,t.iD)(t.HY,null,(0,t.Ko)(a.menu,((a,e)=>((0,t.wg)(),(0,t.iD)("div",{key:e,class:"menu-item",onClick:e=>p.toWhere(a.bookmark)},[(0,t._)("div",l,(0,n.zw)(a.name),1)],8,c)))),128))],512),[[v.F8,a.display]])])),_:1}),(0,t._)("i",{class:"fa-solid fa-bars",style:{cursor:"pointer","font-size":"30px",color:"#FFFFFF","margin-left":"10px"},onClick:e[0]||(e[0]=(...a)=>p.displayToggle&&p.displayToggle(...a))})]),r])}var u={data:()=>({display:!1,menu:[{name:"取得現在日期",bookmark:"aaa"},{name:"取集合",bookmark:"aaa"},{name:"檢查是否為空物件",bookmark:"bbb"},{name:"刪除字串中的 '.' ",bookmark:"bbb"},{name:"回傳符合條件的元素",bookmark:"ccc"},{name:"陣列打平",bookmark:"ccc"},{name:"是否為本基測試",bookmark:"ddd"},{name:"字串是否包含某字串",bookmark:"ddd"},{name:"async 與 await",bookmark:"eee"},{name:"去除字符串空格(空白符)",bookmark:"eee"},{name:"字串去頭去尾",bookmark:"fff"},{name:"陣列排序",bookmark:"fff"}]}),methods:{displayToggle(){var a=this;a.display=!a.display},toWhere(a){return $("html,body").animate({scrollTop:$("#"+a).offset().top},"show"),!1}}},p=d(744);const m=(0,p.Z)(u,[["render",b],["__scopeId","data-v-142eb165"]]);var k=m}}]);
//# sourceMappingURL=728.7dc5309d.js.map
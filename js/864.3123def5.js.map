{"version":3,"file":"js/864.3123def5.js","mappings":"6LACOA,MAAM,Y,GACJA,MAAM,Y,GAEFA,MAAM,c,iBAEFA,MAAM,a,irKALrBC,EAAAA,EAAAA,IAsRM,MAtRN,EAsRM,EArRJC,EAAAA,EAAAA,GAcM,MAdN,EAcM,EAbJC,EAAAA,EAAAA,IASaC,EAAAA,GAAA,CATDC,KAAK,QAAM,C,kBACrB,IAOM,WAPNH,EAAAA,EAAAA,GAOM,MAPN,EAOM,gBANJD,EAAAA,EAAAA,IAKMK,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IALmBC,EAAAA,MAAI,CAAhBC,EAAMC,M,WAAnBT,EAAAA,EAAAA,IAKM,OAL0BU,IAAKD,EAAGV,MAAM,YAAaY,QAAK,GAAEC,EAAAA,QAAQJ,EAAKK,WAA/E,EACEZ,EAAAA,EAAAA,GAEM,MAFN,GAEMa,EAAAA,EAAAA,IADDN,EAAKJ,MAAI,IAFhB,eADF,YAAgCG,EAAAA,c,OAUlCN,EAAAA,EAAAA,GAC6B,KAD1BF,MAAM,mBAAmBgB,MAAA,2EACzBJ,QAAK,oBAAEC,EAAAA,eAAAA,EAAAA,iBAAAA,QAEZI,G,CA0QJ,OACEC,KAAM,KAAM,CACVC,SAAS,EACTC,KAAM,CACJ,CACEf,KAAM,SACNS,SAAU,OAEZ,CACET,KAAM,MACNS,SAAU,OAEZ,CACET,KAAM,WACNS,SAAU,OAEZ,CACET,KAAM,cACNS,SAAU,OAEZ,CACET,KAAM,YACNS,SAAU,OAEZ,CACET,KAAM,OACNS,SAAU,OAEZ,CACET,KAAM,UACNS,SAAU,OAEZ,CACET,KAAM,YACNS,SAAU,OAEZ,CACET,KAAM,gBACNS,SAAU,OAEZ,CACET,KAAM,eACNS,SAAU,OAEZ,CACET,KAAM,SACNS,SAAU,OAEZ,CACET,KAAM,OACNS,SAAU,UAIhBO,QAAS,CACPC,gBACE,IAAIC,EAAOC,KACXD,EAAKJ,SAAWI,EAAKJ,OACtB,EACDM,QAAQC,GAON,OANAC,EAAE,aAAaC,QACb,CACEC,UAAWF,EAAE,IAAMD,GAAII,SAASC,KAElC,SAEK,CACT,I,SCvVJ,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://myweb/./src/views/JSView.vue","webpack://myweb/./src/views/JSView.vue?e228"],"sourcesContent":["<template>\n  <div class=\"home all\">\n    <div class=\"vue-menu\">\n      <transition name=\"fade\">\n        <div class=\"menu-items\" v-show=\"display\">\n          <div v-for=\"(item, i) in menu\" :key=\"i\" class=\"menu-item\" @click=\"toWhere(item.bookmark)\">\n            <div class=\"menu-text\" >\n              {{ item.name }}\n            </div>\n\n          </div>\n        </div>\n      </transition>\n\n      <i class=\"fa-solid fa-bars\" style=\"cursor: pointer;font-size:30px;color:#FFFFFF;margin-left: 10px;\"\n        @click=\"displayToggle\"></i>\n    </div>\n    <div class=\"vue-content\">\n      <div class=\"jsView\">\n        <div class=\"divClass\" id=\"aaa\">\n          <div class=\"divL\">\n\n            <div class=\"divTitle\">\n              <h2>\n                取得現在日期\n              </h2>\n            </div>\n            <div class=\"divContent\">\n              <code>\n          <pre>\nvar now=new Date().toLocaleString()\n          </pre>\n        </code>\n            </div>\n          </div>\n          <div class=\"divR\">\n            <div class=\"divTitle\">\n              <h2>\n                取集合\n              </h2>\n            </div>\n            <div class=\"divContent\">\n              <code>\n          <pre>\nvar setA = [1,1,2,3,3];\nvar setB = [...new Set(setA)];\n\n==> setB = [1,2,3];\n          </pre>\n        </code>\n            </div>\n          </div>\n\n        </div>\n        <div class=\"divClass\" id=\"bbb\">\n          <div class=\"divL\">\n\n            <div class=\"divTitle\">\n              <h2>\n                檢查是否為空物件\n              </h2>\n            </div>\n            <div class=\"divContent\">\n              <code>\n          <pre>\nfunction isEmpty(obj) {\n  for(var key in obj) {\n    if(obj.hasOwnProperty(key))\n    return false;\n  }\n  return true;\n}\n          </pre>\n        </code>\n            </div>\n          </div>\n          <div class=\"divR\">\n            <div class=\"divTitle\">\n              <h2>\n                刪除字串中的 \".\"\n              </h2>\n            </div>\n            <div class=\"divContent\">\n              <code>\n          <pre>\nvar x = \"我.我.我.我.我.我.我\";\nx.replace(/[.]/g,\"\");\n\n=>我我我我我我我\n          </pre>\n        </code>\n            </div>\n          </div>\n\n        </div>\n        <div class=\"divClass\" id=\"ccc\">\n          <div class=\"divL\">\n\n            <div class=\"divTitle\">\n              <h2>\n                回傳符合條件的元素，得到一個新陣列。\n              </h2>\n            </div>\n            <div class=\"divContent\">\n              <code>\n          <pre>\nvar arr = [1,2,3,4,5];\narr.filter(function(value) {\n  return value > 3;\n});\n\n=>[4,5]\n              \n          </pre>\n        </code>\n            </div>\n          </div>\n          <div class=\"divR\">\n            <div class=\"divTitle\">\n              <h2>\n                陣列打平\n              </h2>\n            </div>\n            <div class=\"divContent\">\n              <code>\n          <pre>\nvar myArray = [[1, 2],[3, 4, 5], [6, 7, 8, 9]];\n[].concat(...myArray);\n\n=>[1, 2, 3, 4, 5, 6, 7, 8, 9]\n          </pre>\n        </code>\n            </div>\n          </div>\n\n        </div>\n        <div class=\"divClass\" id=\"ddd\">\n          <div class=\"divL\">\n\n            <div class=\"divTitle\">\n              <h2>\n                是否為本基測試\n              </h2>\n            </div>\n            <div class=\"divContent\">\n              <code>\n          <pre>\n if (location.hostname == \"localhost\") {\n               \n} else {\n                 \n}\n          </pre>\n        </code>\n            </div>\n          </div>\n          <div class=\"divR\">\n            <div class=\"divTitle\">\n              <h2>\n                字串是否包含某字串\n              </h2>\n            </div>\n            <div class=\"divContent\">\n              <code>\n\n            <li>indexOf() 方法可返回某個指定的字串值在字串中首次出現的位置。如果要檢索的字串值沒有出現，則該方法返回 -1。\n            </li>\nvar str = \"123\";\nconsole.log(str.indexOf(\"3\") != -1 );  // true\n            <li>search() 方法用於檢索字串中指定的子字串，或檢索與正則表示式相匹配的子字串。如果沒有找到任何匹配的子串，則返回 -1。。\n            </li>\nvar str = \"123\";\nconsole.log(str.search(\"3\") != -1 );  // true\n        </code>\n            </div>\n          </div>\n\n        </div>\n        <div class=\"divClass\" id=\"eee\">\n          <div class=\"divL\">\n\n            <div class=\"divTitle\">\n              <h2>\n                async 與 await\n              </h2>\n            </div>\n            <div class=\"divContent\">\n              <code>\n          <pre>\nfunction asyncFunc1(url) {\n  return new Promise((resolve, reject) => {\n     resolve(someValue);         // 完成\n     reject(\"failure reason\");   // 拒絕\n  });\n};\n\nfunction asyncFunc2(url) {\n  return new Promise((resolve, reject) => {\n    // resolve() or reject()\n  });\n};\n\nconst asyncCall = async () => {\n  const result1 = await asyncFunc1();\n  const result2 = await asyncFunc2();\n};\n          </pre>\n        </code>\n            </div>\n          </div>\n          <div class=\"divR\">\n            <div class=\"divTitle\">\n              <h2>\n                去除字符串空格(空白符)\n              </h2>\n            </div>\n            <div class=\"divContent\">\n              <code>\n          <pre>\n去除字符串內所有的空格：str = str.replace(/\\s*/g,\"\");\n\n去除字符串內兩頭的空格：str = str.replace(/^\\s*|\\s*$/g,\"\");\n\n去除字符串內左側的空格：str = str.replace(/^\\s*/,\"\");\n\n去除字符串內右側的空格：str = str.replace(/(\\s*$)/g,\"\");\n          </pre>\n        </code>\n            </div>\n          </div>\n\n        </div>\n\n\n\n        <div class=\"divClass\" id=\"fff\">\n          <div class=\"divL\">\n\n            <div class=\"divTitle\">\n              <h2>\n                字串去頭去尾\n              </h2>\n            </div>\n            <div class=\"divContent\">\n              <code>\n          <pre>\n\nstr.slice(start,end)\n\"123456789\".slice(0,3)   ====>   '123'\n\"123456789\".slice(1,4)   ====>   '234'\n\"123456789\".slice(0,-1)   ====>   '12345678'  去尾\n\"123456789\".slice(1,-1)   ====>   '2345678'   去頭去尾\n          </pre>\n        </code>\n            </div>\n          </div>\n          <div class=\"divR\">\n            <div class=\"divTitle\">\n              <h2>\n                陣列排序\n              </h2>\n            </div>\n            <div class=\"divContent\">\n              <code>\n          <pre>\nc = [3, -1, -2]\nc.sort()                             ====>  [-1,-2,3]\nc.sort(function(a,b){return a-b})    ====>  [-2,-1,3]   可排負數        \n          </pre>\n        </code>\n            </div>\n          </div>\n\n        </div>\n\n\n\n      </div>\n    </div>\n  </div>\n\n</template>\n<script>\nexport default {\n  data: () => ({\n    display: false,\n    menu: [\n      {\n        name: \"取得現在日期\",\n        bookmark: \"aaa\"\n      },\n      {\n        name: \"取集合\",\n        bookmark: \"aaa\"\n      },\n      {\n        name: \"檢查是否為空物件\",\n        bookmark: \"bbb\"\n      },\n      {\n        name: \"刪除字串中的 '.' \",\n        bookmark: \"bbb\"\n      },\n      {\n        name: \"回傳符合條件的元素\",\n        bookmark: \"ccc\"\n      },\n      {\n        name: \"陣列打平\",\n        bookmark: \"ccc\"\n      },\n      {\n        name: \"是否為本基測試\",\n        bookmark: \"ddd\"\n      },\n      {\n        name: \"字串是否包含某字串\",\n        bookmark: \"ddd\"\n      },\n      {\n        name: \"async 與 await\",\n        bookmark: \"eee\"\n      },\n      {\n        name: \"去除字符串空格(空白符)\",\n        bookmark: \"eee\"\n      },\n      {\n        name: \"字串去頭去尾\",\n        bookmark: \"fff\"\n      },\n      {\n        name: \"陣列排序\",\n        bookmark: \"fff\"\n      }\n    ]\n  }),\n  methods: {\n    displayToggle() {\n      var self = this;\n      self.display = !self.display;\n    },\n    toWhere(da) {\n      $(\"html,body\").animate(\n        {\n          scrollTop: $(\"#\" + da).offset().top\n        },\n        \"show\"\n      );\n      return false;\n    }\n  },\n}\n</script>\n<style lang=\"scss\" scoped>\nli {\n  margin-top: 50px !important;\n}\n</style>","import { render } from \"./JSView.vue?vue&type=template&id=4f79eee7&scoped=true\"\nimport script from \"./JSView.vue?vue&type=script&lang=js\"\nexport * from \"./JSView.vue?vue&type=script&lang=js\"\n\nimport \"./JSView.vue?vue&type=style&index=0&id=4f79eee7&lang=scss&scoped=true\"\n\nimport exportComponent from \"C:\\\\myGit\\\\myWebsite1\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4f79eee7\"]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_createElementVNode","_createVNode","_Transition","name","_Fragment","_renderList","_ctx","item","i","key","onClick","$options","bookmark","_toDisplayString","style","_hoisted_6","data","display","menu","methods","displayToggle","self","this","toWhere","da","$","animate","scrollTop","offset","top","__exports__","render"],"sourceRoot":""}